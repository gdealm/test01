# This file tests that the tutorial template remains usable for many users, regardless of their environment
# There is several tests:
#   A: against several versions of our docker stable image
#   B: against official packages of Debian and Ubuntu
#   C: against our specific docker image

# (TEST A) test the tutorial against our simgrid/stable docker images
#####################################################################
# Targets: simgrid git + 4 last simgrid releases (at most)

.build_our_img: &build_our_img
  script:
    - apt-get update
    - apt-get install -y cmake build-essential libboost-dev
    - cmake .
    - make VERBOSE=1
    - ./master-workers small_platform.xml master-workers_d.xml
    - ./ping-pong cluster_platform.xml
    - sgminorver=$(grep "define SIMGRID_VERSION_MINOR" /usr/include/simgrid/version.h |cut -d' ' -f 3) \
      sgpatchver=$(grep "define SIMGRID_VERSION_PATCH" /usr/include/simgrid/version.h |cut -d' ' -f 3) \
      sgversion="3.$sgminorver.$sgpatchver" \
      if printf '%s\n%s\n' "3.29.1" "$sgversion" | sort --check=quiet --version-sort ; then \
        python master-workers.py small_platform.xml master-workers_d.xml --cfg="tracing:yes tracing/actor:yes" ; \
      else \
        echo "Python not tested: SimGrid is v$sgversion but 3.29.1 or higher is expected"; \
      fi

test-git-unstable:
  image:
    name: simgrid/unstable
    entrypoint: ['/bin/bash', '-c', 'ln -snf /bin/bash /bin/sh && /bin/bash -c $0' ]
  <<: *build_our_img

test-git-v3.29:
  image: simgrid/stable:v3.29
  <<: *build_our_img

test-git-v3.28:
  image: simgrid/stable:v3.28
  <<: *build_our_img

test-git-v3.27:
  image: simgrid/stable:v3.27
  <<: *build_our_img

test-git-v3.26:
  image: simgrid/stable:v3.26
  <<: *build_our_img

# (TEST B) test against several official docker images
######################################################
# v3.25 is Debian 11, Ubuntu 20.10, Ubuntu 21.04
# S4U API broke in v3.22, we cannot easily make this template working with previous versions.

# Ubuntu's tzdata requires TZ=Europe/Paris DEBIAN_FRONTEND=noninteractive in at least v20.04 to v21.10

.build_pkg: &build_pkg
  script:
    - apt-get update
    - TZ=Europe/Paris DEBIAN_FRONTEND=noninteractive apt-get install -y cmake build-essential libsimgrid-dev
    - cmake .
    - make VERBOSE=1
    - ./master-workers small_platform.xml master-workers_d.xml
    - ./ping-pong cluster_platform.xml

test-git-debian11:
  image: debian:11
  <<: *build_pkg

# Some Ubuntu images require the entrypoint to be specified. And we need /bin/sh to be bash :(
# See https://gitlab.com/gitlab-org/gitlab-runner/-/issues/27614
test-git-ubuntu2004:
  image: ubuntu:20.04
  <<: *build_pkg

# Modern Ubuntu systems are borken in a weird way, so `allow_failure: true`. Remove that once it gets fixed.
# https://stackoverflow.com/questions/66319610/gpg-error-in-ubuntu-21-04-after-second-apt-get-update-during-docker-build
#
test-git-ubuntu2104:
  image:
    name: ubuntu:21.04
    entrypoint: ['/bin/bash', '-c', 'ln -snf /bin/bash /bin/sh && /bin/bash -c $0' ]
  <<: *build_pkg
  allow_failure: true
test-git-ubuntu2110:
  image:
    name: ubuntu:21.10
    entrypoint: ['/bin/bash', '-c', 'ln -snf /bin/bash /bin/sh && /bin/bash -c $0' ]
  <<: *build_pkg
  allow_failure: true

# (TEST C) Test the simgrid/tuto-s4u docker image
#################################################
test-image:
  image:
    name: simgrid/tuto-s4u
    entrypoint: ['/bin/bash', '-c', 'ln -snf /bin/bash /bin/sh && /bin/bash -c $0' ]
  script:
    - mkdir /source/tutorial # create the pseudo-volume
    - cp -r /source/simgrid-template-s4u.git/* /source/tutorial
    - cd /source/tutorial
    - cmake .
    - make VERBOSE=1
    - ./master-workers small_platform.xml master-workers_d.xml
    - ./ping-pong cluster_platform.xml
